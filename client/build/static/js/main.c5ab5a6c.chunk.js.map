{"version":3,"sources":["components/Content/Menu/Item/Item.js","components/Content/Menu/Nav/Menu.js","components/Content/Slider/Slide/Slide.js","components/Content/Slider/Slider/Slider.js","components/Content/NewGood/NewGood.js","components/Content/Good/Good.js","components/Content/Cat/Cat.js","components/Footer/Footer.js","components/Content/Error/Error.js","components/Content/Main/Main.js","components/Login/Login.js","components/Panel/Command/Command.js","components/Panel/Item/Item.js","components/Panel/Form/Form.js","components/Panel/Modal/Modal.js","components/Panel/SlideItem/SlideItem.js","components/Panel/SlideForm/SlideForm.js","components/Panel/SlideUpdateForm/SlideUpdateForm.js","components/Panel/Panel/Panel.js","App.js","index.js"],"names":["Item","props","className","this","href","iconClass","content","Component","Menu","state","isOpened","toggleMenu","setState","onClick","Slide","good","descr","src","alt","SliderNews","dots","arrows","autoplay","infinite","pauseOnFocus","speed","autoplaySpeed","slidesToShow","slidesToScroll","slides","map","slide","key","_id","title","img","filename","NewGood","cat","cost","Good","style","Cat","sortFunc","nameId","defaultClass","id","Footer","Error","message","Main","componentDidMount","axios","get","then","res","cats","checked","data","forEach","item","index","undefined","push","goods","isLoaded","catch","err","sortByCat","catNameId","activeCatSel","catsSel","document","querySelectorAll","i","length","classList","remove","getElementById","add","isSorted","sortedGoods","filter","renderNewGoods","newGoods","checkLoading","checkError","name","uuidv1","Login","sendData","login","value","password","post","console","log","success","error","response","to","htmlFor","type","required","Command","action","date","substr","updatedAt","Date","toDateString","toLocaleTimeString","Form","updateState","e","createPost","a","async","preventDefault","formData","FormData","querySelector","files","form","method","encType","event","Modal","updatePost","closeModal","defaultValue","originalname","SlideItem","SlideForm","createSlide","SlideUpdateForm","updateSlide","Panel","specifyClickForGoods","target","parentNode","container","itemIndex","children","itemId","contains","url","deletePost","find","elem","toString","modalItem","modalItemIndex","modalVisibility","getGoods","formVisibility","put","delete","specifyClickForSlides","slideIndex","slideId","deleteSlide","slideForUpdate","modalSlide","modalSlideVisibility","getSlides","slideFormVisibility","newSlides","toggleForm","toggleSlideForm","closeSlideUpdateForm","App","path","component","exact","ReactDOM","render"],"mappings":"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","file":"static/js/main.c5ab5a6c.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nexport class Item extends Component {\r\n  render(props) {\r\n    return (\r\n    <div className={this.props.className}>\r\n      <a href={this.props.href}>\r\n        <i className={this.props.iconClass}></i> { this.props.content }\r\n      </a>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Item;\r\n","import React, { Component } from 'react';\r\nimport Item from '../Item/Item'\r\n\r\nimport './Menu.css';\r\nimport './Menu-media.css';\r\n\r\nexport class Menu extends Component {\r\n\r\n  state = {\r\n    isOpened: false\r\n  };\r\n\r\n  toggleMenu = () => {\r\n    this.setState({\r\n      isOpened: !this.state.isOpened\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"nav__wrapper\">\r\n        <div className=\"container\">\r\n          <div className=\"top__wrapper\">\r\n              <div className=\"top__logo\">\r\n                  <h3 className=\"top__text\"><a href=\"/\">STORIFY</a></h3>\r\n              </div>\r\n\r\n              <div className=\"trigger\" onClick={ this.toggleMenu }>\r\n                  <span className=\"trigger__elem\"></span>\r\n                  <span className=\"trigger__elem\"></span>\r\n                  <span className=\"trigger__elem\"></span>\r\n              </div>\r\n\r\n              <nav className={this.state.isOpened ? 'nav nav-show': 'nav'}>\r\n                  \r\n                <div className=\"closer\" onClick={ this.toggleMenu }>\r\n                    <span className=\"closer__elem\"></span>\r\n                    <span className=\"closer__elem\"></span>\r\n                </div>\r\n\r\n                <div className=\"nav__menu\">\r\n                    <Item \r\n                      className=\"nav__item\" \r\n                      href=\"#special\" \r\n                      iconClass=\"fas fa-home\" \r\n                      content=\"Special Offers\"\r\n                     />\r\n                    \r\n                    <Item \r\n                      className=\"nav__item\" \r\n                      href=\"#brand-new\" \r\n                      iconClass=\"fas fa-list-alt\"\r\n                      content=\"New Products\"\r\n                    />\r\n                    \r\n                    <Item \r\n                      className=\"nav__item\" \r\n                      href=\"#all\" \r\n                      iconClass=\"fas fa-clipboard-check\"\r\n                      content=\"Product Catalog\"\r\n                    />\r\n                    \r\n                </div>\r\n\r\n              </nav>\r\n              \r\n            </div>\r\n          </div>\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default Menu;\r\n","import React, { Component } from 'react';\r\n\r\nexport class Slide extends Component {\r\n  render(props) {\r\n    return (\r\n      <div className=\"slider__elem\">\r\n        <div className=\"slider__elem-content\">\r\n          <h4 className=\"slider__elem-title\">{this.props.good}</h4>\r\n          <p className=\"slider__elem-parag\">{this.props.descr}</p>\r\n\r\n          {\r\n            this.props.href ?\r\n              <a href={this.props.href} className=\"slider__elem-link\">More</a>\r\n            :\r\n              null\r\n          }\r\n        </div>\r\n    \r\n        <div className=\"slider__elem-bg\"></div>\r\n\r\n        <div className=\"slider__image\">\r\n          <img className=\"slider__image-img\" src={this.props.src} alt={this.props.alt} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Slide;\r\n","import React, { Component } from \"react\";\r\nimport Slider from \"react-slick\";\r\nimport Slide from \"../Slide/Slide\";\r\n\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\n\r\nimport './Slider.css';\r\nimport './Slider-media.css'\r\n\r\nexport class SliderNews extends Component {\r\n  render(props) {\r\n    const settings = {\r\n      dots: true,\r\n      arrows: false,\r\n      autoplay: true,\r\n      infinite: false,\r\n      pauseOnFocus: true,\r\n      speed: 1300,\r\n      autoplaySpeed: 4000,\r\n      slidesToShow: 1,\r\n      slidesToScroll: 1\r\n    };\r\n\r\n    return (\r\n      <div className=\"slider\">\r\n        <Slider {...settings}> \r\n\r\n          {\r\n\r\n            this.props.slides.map(slide => {\r\n              return (\r\n              <Slide\r\n                key={slide._id}  \r\n                good={slide.title}\r\n                descr={slide.descr}\r\n                href={slide.href}\r\n                src={`slides/${slide.img.filename}`}\r\n                alt={slide.alt}\r\n              />)\r\n            })\r\n\r\n          }\r\n\r\n        </Slider>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SliderNews;\r\n","import React, { Component } from 'react';\r\n// import { Link } from 'react-router-dom';\r\n\r\nimport './NewGood.css';\r\nimport './NewGood-media.css';\r\n\r\nexport class NewGood extends Component {\r\n\r\n  render(props) { \r\n    return (\r\n      <div className={`newgoods__elem ${this.props.cat}`}>\r\n        <div className=\"newgoods__block\">\r\n            <h4 className=\"newgoods__elem-title\">{this.props.good}</h4>\r\n            <p className=\"newgoods__elem-parag\">\r\n              {this.props.descr}        \r\n            </p>\r\n            <div className=\"newgoods__elem-bg\"></div>\r\n            <img className=\"newgoods__elem-img\" src={`/uploads/${this.props.img.filename}`} alt={this.props.alt} />\r\n\r\n            {/* <Link to={this.props.href}>\r\n              <span className=\"newgoods__elem-btn\">{this.props.cost}</span>\r\n            </Link> */}\r\n\r\n            <a href={this.props.href} className=\"newgoods__elem-btn\">{`Buy it for ${this.props.cost}`}</a>\r\n\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NewGood;\r\n","import React, { Component } from 'react';\r\n// import { Link } from 'react-router-dom';\r\n\r\nimport './Good.css';\r\nimport './Good-media.css';\r\n\r\nexport class Good extends Component {\r\n\r\n\r\n  render(props) {\r\n    //console.log(this.props);\r\n\r\n    return (\r\n        <div className={`goods__elem ${this.props.cat}`} style={props}>\r\n          <div className=\"goods__block\">\r\n\r\n            <h4 className=\" goods__elem-title\">{this.props.good}</h4>\r\n            <p className=\"goods__elem-parag\">\r\n              {this.props.descr}\r\n            </p>\r\n            <div className=\"goods__elem-bg\"></div>\r\n            <img className=\"goods__elem-img\" src={`/uploads/${this.props.img.filename}`} alt={this.props.alt} />\r\n            <span className=\"goods__elem-price\">{this.props.cost}</span>\r\n\r\n            {/* <Link to={this.props.href}>\r\n              <span className=\"goods__elem-btn\">Buy now</span>\r\n            </Link> */}\r\n\r\n            <a href={this.props.href} className=\"goods__elem-btn\">Buy now</a>\r\n\r\n          </div>\r\n        </div>\r\n      )\r\n  }\r\n}\r\n\r\nexport default Good;\r\n","import React, { Component } from 'react';\r\n\r\nimport './Cat.css';\r\nimport './Cat-media.css';\r\n\r\nexport class Cat extends Component {\r\n  render(props) {\r\n    return (\r\n      <div \r\n        onClick={() => this.props.sortFunc(this.props.nameId, 'cats__elem-active', '.cats__elem')} \r\n        className={ `${(this.props.defaultClass !== '' ? this.props.defaultClass : '')} cats__elem` } \r\n        id={this.props.nameId}\r\n      >{this.props.content}</div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Cat;\r\n","import React, { Component } from 'react';\r\n\r\nimport './Footer.css';\r\nimport './Footer-media.css';\r\n\r\nexport class Footer extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"footer\">\r\n        <div className=\"footer__content\">\r\n\r\n          <div className=\"footer__title\">\r\n            <a href=\"/\">Storify</a>\r\n          </div>\r\n\r\n          <div className=\"footer__links\">\r\n            <a href=\"https://vk.com/\" className=\"footer__link\"><i className=\"fab fa-vk\"></i></a>\r\n            <a href=\"https://www.facebook.com/\" className=\"footer__link\"><i className=\"fab fa-facebook-f\"></i></a>\r\n            <a href=\"https://www.instagram.com/\" className=\"footer__link\"><i className=\"fab fa-instagram\"></i></a>\r\n          </div>\r\n\r\n          <div className=\"footer__nav\">\r\n            <ul className=\"footer__menu\">\r\n              <li className=\"footer__menu-item\"><a href=\"#special\">Special Offers</a></li>\r\n              <li className=\"footer__menu-item\"><a href=\"#brand-new\">New Products</a></li>\r\n              <li className=\"footer__menu-item\"><a href=\"#all\">Product Catalog</a></li>\r\n            </ul>\r\n          </div>\r\n\r\n        </div>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Footer;\r\n","import React, { Component, Fragment } from 'react';\r\n\r\nimport './Error.css'\r\n\r\nexport class Error extends Component {\r\n  render(props) {\r\n    return (\r\n      <Fragment>\r\n        <p className=\"error-msg\">{this.props.message}</p>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Error;\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport uuidv1 from 'uuid/v1';\r\n\r\nimport Menu from '../Menu/Nav/Menu';\r\nimport SliderNews from '../Slider/Slider/Slider';\r\nimport NewGood from '../NewGood/NewGood';\r\nimport Good from '../Good/Good';\r\nimport Cat from '../Cat/Cat';\r\nimport Footer from '../../Footer/Footer';\r\nimport Error from '../Error/Error';\r\n\r\nexport class Main extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      goods: [],\r\n      sortedGoods: [],\r\n      slides: [],\r\n      cats: [],\r\n      err: undefined,\r\n      isLoaded: false,\r\n      isSorted: false\r\n    }\r\n  }\r\n\r\n  // making request after rendering\r\n  componentDidMount = () => {\r\n\r\n    // getting goods from api\r\n    axios.get('/api/goods')\r\n      .then(res => {\r\n        const cats = [];\r\n        const checked = {};\r\n        \r\n        // extracting unique cats from all items\r\n        res.data.forEach((item, index) => {\r\n          if(checked[item.cat] === undefined) {\r\n            checked[item.cat] = true;\r\n            cats.push(item.cat);\r\n          }\r\n        });\r\n\r\n        this.setState({\r\n          ...this.state,\r\n          goods: res.data,\r\n          cats: cats,\r\n          isLoaded: true\r\n        });\r\n      \r\n      })\r\n      .catch(err => {\r\n        this.setState({\r\n          ...this.state,\r\n          err: err\r\n        });\r\n\r\n      });\r\n\r\n\r\n      // getting slides from api\r\n      axios.get('api/slides')\r\n        .then(res => {\r\n          const slides = [];\r\n\r\n          res.data.forEach((slide) => {\r\n            slides.push(slide);\r\n          });\r\n\r\n          this.setState({\r\n            ...this.state,\r\n            slides: slides\r\n          });\r\n\r\n        })\r\n        .catch(err => {\r\n          this.setState({\r\n            ...this.state,\r\n            err: err\r\n          });\r\n        })\r\n\r\n  }\r\n\r\n  // sort method for cats\r\n  sortByCat = (catNameId, activeCatSel, catsSel) => {\r\n    // cleaning all cats of active selector \r\n    const cats = document.querySelectorAll(catsSel);\r\n    for(let i = 0; i < cats.length; i++) {\r\n      cats[i].classList.remove(activeCatSel);\r\n    }\r\n\r\n    // setting for the chosen cat the active selector\r\n    document.getElementById(catNameId).classList.add(activeCatSel);\r\n\r\n    // if the clear-item was chosen\r\n    if(catNameId === \"__all__\") {\r\n\r\n      this.setState({\r\n        ...this.state,\r\n        isSorted: false\r\n      });\r\n    }\r\n  \r\n    else {\r\n\r\n      // getting matched items\r\n      const sortedGoods = this.state.goods.filter((item) => item.cat === catNameId);\r\n\r\n      this.setState({\r\n        ...this.state,\r\n        isSorted: true,\r\n        sortedGoods\r\n      });\r\n\r\n    }\r\n\r\n  }\r\n\r\n  // extracting items from state to 'new goods' section\r\n  renderNewGoods = () => {\r\n    const newGoods = [];\r\n    const goods = this.state.goods;\r\n\r\n    for(let i = 0; i < goods.length && i < 4; i++) {\r\n      newGoods.push(goods[i]);\r\n    }\r\n\r\n    return newGoods;\r\n  }\r\n\r\n  // if content is loading render loading message\r\n  checkLoading = () => {\r\n    if(this.state.isLoaded === false && this.state.err === undefined) {\r\n      return false;\r\n    }\r\n    else if(this.state.isLoaded === true && this.state.err === undefined) {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  // if err has occured return true\r\n  checkError = () => {\r\n    if(this.state.err !== undefined) {\r\n      return true;\r\n    } \r\n    else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  render(props) {\r\n    return (\r\n      <div>\r\n        <Menu />\r\n  \r\n        <section className=\"section\">  \r\n          <div className=\"container\">\r\n            <h2 className=\"section__title\" id=\"special\">Special Offers</h2>\r\n            {\r\n              this.state.slides.length > 0 ?\r\n              <SliderNews slides={this.state.slides} />\r\n              :\r\n                <p>No offers yet!</p>\r\n            }\r\n          </div>\r\n        </section>\r\n  \r\n        <section className=\"section goods\">\r\n          <div className=\"container\">\r\n            <h2 className=\"section__title\" id=\"brand-new\">New products</h2>\r\n\r\n            <div className=\"align-center\">\r\n              { !this.checkLoading() ? <span className=\"loading-msg\">Content is loading...</span> : null }\r\n            </div>\r\n\r\n           \r\n            <div className=\"align-center\">\r\n            { this.checkError() ? <Error message=\"Server error, try to reload the web site\" /> : null }\r\n            </div>\r\n\r\n            <div className=\"goods__content\">\r\n\r\n              {\r\n                this.checkLoading() ?\r\n                this.renderNewGoods().map((item) => {\r\n                  return (\r\n                    <NewGood\r\n                    key={item._id}\r\n                    cat={item.cat}\r\n                    good={item.name}\r\n                    descr={item.descr}\r\n                    img={item.img}\r\n                    alt=\"Product on Storify\"\r\n                    cost={`${item.cost}$`}\r\n                    href={item.href}\r\n                  />\r\n                  );\r\n                }) \r\n                : null\r\n              }\r\n  \r\n            </div>\r\n          </div>\r\n        </section>\r\n  \r\n        <section className=\"section\">\r\n  \r\n          <div className=\"container\">\r\n            <h2 className=\"section__title\" id=\"all\">Product Catalog</h2>\r\n  \r\n            <div className=\"cats__container\" id=\"cats-container\">\r\n\r\n              <Cat defaultClass=\"cats__elem-active\" key={'__all__'} nameId=\"__all__\" content=\"all products\" sortFunc={this.sortByCat} />\r\n              {\r\n                \r\n                this.state.cats.map((cat) => {\r\n                  return <Cat defaultClass=\"\" nameId={cat} content={cat} key={uuidv1()} sortFunc={this.sortByCat}/>\r\n                })\r\n\r\n              }\r\n\r\n            </div>\r\n              \r\n            <div className=\"align-center\">\r\n              { !this.checkLoading() ? <span className=\"loading-msg\">Content is loading...</span> : null }\r\n            </div>\r\n          \r\n            <div className=\"align-center\">\r\n            { this.checkError() ? <Error message=\"Server error, try to reload the web site\" /> : null }\r\n            </div>\r\n\r\n            <div className=\"goods__content\">\r\n\r\n              {\r\n                this.checkLoading() ?\r\n                \r\n                 (this.state.isSorted === true ?\r\n\r\n                  this.state.sortedGoods.map((item) => {\r\n                    return (\r\n\r\n                        <Good\r\n                          key={item._id}\r\n                          cat={item.cat}\r\n                          good={item.name}\r\n                          descr={item.descr}\r\n                          img={item.img}\r\n                          alt=\"Product on Storify\"\r\n                          cost={`${item.cost}$`}\r\n                          href={item.href}\r\n                        />\r\n                      \r\n                    );\r\n                  })\r\n\r\n                  : \r\n\r\n                  this.state.goods.map((item) => {\r\n                    return (\r\n                        <Good\r\n                          key={item._id}\r\n                          cat={item.cat}\r\n                          good={item.name}\r\n                          descr={item.descr}\r\n                          img={item.img}\r\n                          alt=\"Product on Storify\"\r\n                          cost={`${item.cost}$`}\r\n                          href={item.href}\r\n                        />\r\n                    );\r\n                  }))\r\n\r\n                : null\r\n              }\r\n\r\n            </div>\r\n  \r\n          </div>\r\n  \r\n        </section>\r\n  \r\n        <footer className=\"section\">\r\n          <div className=\"container\">\r\n            <Footer />\r\n          </div>\r\n        </footer>\r\n  \r\n      </div>\r\n    \r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nimport './Login.css';\r\n\r\nexport class Login extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      login: null,\r\n      password: null,\r\n      err: null,\r\n      success: false\r\n    }\r\n  }\r\n\r\n\r\n  // sending data to server for login\r\n  sendData = () => {\r\n\r\n    const login = document.getElementById('login').value;\r\n    const password = document.getElementById('password').value;\r\n\r\n    this.setState({\r\n      ...this.state,\r\n      login,\r\n      password\r\n    });\r\n\r\n    axios.post('/secret/adminlogin', {\r\n      login,\r\n      password\r\n    })\r\n      .then(res => {\r\n        console.log(res);\r\n\r\n        this.setState({\r\n          ...this.state,\r\n          success: true\r\n        });\r\n\r\n      })\r\n      .catch(err => {\r\n        console.error(err);\r\n\r\n        this.setState({\r\n          ...this.state,\r\n          err: err.response.data\r\n        });\r\n\r\n      });\r\n\r\n  }\r\n\r\n\r\n  render(props) {\r\n    return (\r\n      <div className=\"container\">\r\n\r\n        <div className=\"login-wrapper\">\r\n          <Link to=\"/\">\r\n            <div className=\"login-logo\">Storify</div>\r\n          </Link>\r\n\r\n          <div className=\"login\">\r\n            <div className=\"login-form\" >\r\n\r\n              <div className=\"login-group\">           \r\n                <label htmlFor=\"login\">Login:</label>\r\n                <input id=\"login\" name=\"login\" type=\"text\" required></input>\r\n              </div>\r\n\r\n              <div className=\"login-group\">           \r\n                <label htmlFor=\"password\">Password:</label>\r\n                <input id=\"password\" name=\"password\" type=\"password\" required></input>\r\n              </div>\r\n\r\n              <input onClick={this.sendData} className=\"login-submit\" type=\"submit\" required></input>\r\n\r\n            </div>\r\n\r\n            <div className=\"login-error\">{this.state.err ? this.state.err : null}</div>\r\n\r\n            {\r\n              this.state.success ? \r\n              <Link to=\"/secret/adminpanel\">\r\n                <button className=\"admin-btn\">Go to admin panel</button>\r\n              </Link>\r\n              : \r\n              null\r\n            }\r\n      \r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","import React from 'react';\r\n\r\nimport './Command.css';\r\n\r\nconst Command = (props) => {\r\n  return (\r\n    <div className=\"commands-item\">\r\n      <span className=\"commands-descr\">{props.descr}:</span>\r\n      <button onClick={props.onClick} className=\"commands-trigger\">{props.action}</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Command;\r\n","import React from 'react';\r\n\r\nimport './Item.css';\r\n\r\nconst Item = (props) => {\r\n\r\n  const date = (date) => {\r\n    return `${(new Date(date).toDateString())} ${(new Date(date).toLocaleTimeString())}`;\r\n  }\r\n\r\n  const trimName = (name) => {\r\n    if(name.length > 30) {\r\n      name = name.substr(0, 27) + '...';\r\n    }\r\n    return name;\r\n  }\r\n\r\n  return (\r\n    <div className=\"item-panel\">\r\n      <span className=\"item-panel-span item-name\">{trimName(props.item.name)}</span>\r\n      <span className=\"item-panel-span item-date\">{ date(props.item.updatedAt) }</span>\r\n      <button className=\"item-btn delete\">delete</button>\r\n      <button className=\"item-btn update\">update</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Item;\r\n","import React, { Component } from 'react';\r\n\r\nimport './Form.css';\r\nimport './Form-media.css';\r\n\r\nexport class Form extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      form: null,\r\n      error: null\r\n    };\r\n  }\r\n\r\n  updateState = async (e, createPost) => {\r\n    e.preventDefault();\r\n\r\n    const formData = new FormData(document.querySelector('.form-post-type'));\r\n\r\n    const cat = document.getElementById('cat').value,\r\n          name = document.getElementById('name').value,\r\n          descr = document.getElementById('descr').value,\r\n          img = document.getElementById('img').files[0],\r\n          href = document.getElementById('href').value,\r\n          cost = document.getElementById('cost').value;\r\n\r\n    \r\n      if(cat && name && descr && img && href && cost) {\r\n        await this.setState({\r\n          ...this.state,\r\n          form: formData\r\n        });\r\n    \r\n        // sending state up to Panel.js\r\n        createPost(this.state.form);\r\n      }\r\n      // if the fields are empty\r\n      else {\r\n        this.setState({\r\n          ...this.state,\r\n          error: 'Fields must be filled!'\r\n        });\r\n      }\r\n  }\r\n\r\n  render(props) {\r\n    return (\r\n      <form className=\"edit-form form-post-type\" action=\"/\" method=\"POST\" encType=\"multipart/form-data\">\r\n        \r\n        <div className=\"form-group\">\r\n          <label className=\"form-label\" htmlFor=\"cat\">Write catigory of a product:</label>\r\n          <input className=\"form-input\" id=\"cat\" name=\"cat\" type=\"text\" required></input>\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label className=\"form-label\" htmlFor=\"name\">Write name of a product:</label>\r\n          <input className=\"form-input\" id=\"name\" name=\"name\" type=\"text\" required></input>\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label className=\"form-label\" htmlFor=\"descr\">Write description of a product:</label>\r\n          <textarea className=\"form-area form-input\" id=\"descr\" name=\"descr\" type=\"text\" required></textarea>\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label className=\"form-label\" htmlFor=\"img\">Upload image of a product:</label>\r\n          <input className=\"form-input\" id=\"img\" name=\"img\" type=\"file\" required></input>\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label className=\"form-label\" htmlFor=\"href\">Put link for the marketplace of a product:</label>\r\n          <input className=\"form-input\" id=\"href\" name=\"href\" type=\"text\" required></input>\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label className=\"form-label\" htmlFor=\"cost\">Create cost of a product:</label>\r\n          <input className=\"form-input\" id=\"cost\" name=\"cost\" type=\"number\" required></input>\r\n        </div>\r\n\r\n        {\r\n          this.state.error ? \r\n            <div className=\"form-error\">\r\n              <span className=\"form-error-msg\">{this.state.error}</span>\r\n            </div>\r\n          :\r\n            null\r\n        }\r\n\r\n        <button onClick={(event) => { this.updateState(event, this.props.onClick) }} className=\"submit-btn\" type=\"submit\">Post</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n","import React, { Component } from 'react';\r\n\r\nimport \"./Modal.css\";\r\n\r\nexport class Modal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    \r\n    this.state = {\r\n      data: null\r\n    };\r\n  }\r\n\r\n\r\n  updateState = async (e, id, updatePost, closeModal) => {\r\n    e.preventDefault();\r\n\r\n    const formData = new FormData(document.querySelector('.form-update-type'));\r\n\r\n    const cat = document.getElementById('modal-cat').value,\r\n          name = document.getElementById('modal-name').value,\r\n          descr = document.getElementById('modal-descr').value,\r\n          href = document.getElementById('modal-href').value,\r\n          cost = document.getElementById('modal-cost').value;\r\n\r\n      if(cat && name && descr && href && cost) {\r\n\r\n        await this.setState({\r\n          ...this.state,\r\n          data: formData\r\n        });\r\n  \r\n\r\n        // sending state up to Panel.js\r\n        updatePost(this.state.data, id);\r\n        closeModal();\r\n      }\r\n  }\r\n\r\n\r\n  render(props) {\r\n\r\n    return (\r\n      <form className=\"edit-form form-update-type\" action=\"/\" method=\"PUT\" encType=\"multipart/form-data\">\r\n          \r\n        <div className=\"form-group\">\r\n          <label className=\"form-label\" htmlFor=\"modal-cat\">Catigory of a product:</label>\r\n          <input className=\"form-input\" id=\"modal-cat\" name=\"cat\" type=\"text\" defaultValue={this.props.item.cat}></input>\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label className=\"form-label\" htmlFor=\"modal-name\">Name of a product:</label>\r\n          <input className=\"form-input\" id=\"modal-name\" name=\"name\" type=\"text\" defaultValue={this.props.item.name}></input>\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label className=\"form-label\" htmlFor=\"modal-descr\">Description of a product:</label>\r\n          <textarea className=\"form-area form-input\" id=\"modal-descr\" name=\"descr\" type=\"text\" defaultValue={this.props.item.descr} />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label className=\"form-label\" htmlFor=\"modal-img\">Image of a product:</label>\r\n          <input className=\"form-input\" id=\"modal-img\" name=\"img\" type=\"file\"></input>\r\n          <p>Currently used image: {this.props.item.img.originalname}</p>\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label className=\"form-label\" htmlFor=\"modal-href\">Link for the marketplace of a product:</label>\r\n          <input className=\"form-input\" id=\"modal-href\" name=\"href\" type=\"text\" defaultValue={this.props.item.href}></input>\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label className=\"form-label\" htmlFor=\"modal-cost\">Cost of a product:</label>\r\n         <input className=\"form-input\" id=\"modal-cost\" name=\"cost\" type=\"number\" defaultValue={this.props.item.cost}></input>\r\n        </div>\r\n\r\n        <div className=\"form-group btn-group\">\r\n          <button onClick={(e) => { this.updateState(e, this.props.item._id, this.props.updatePost, this.props.closeModal); }} className=\"modal-btn\" type=\"submit\">Change</button>\r\n\r\n          <button className=\"modal-btn\" onClick={this.props.closeModal}>Close modal</button>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Modal;\r\n","import React from 'react';\r\n\r\nconst SlideItem = (props) => {\r\n\r\n  const date = (date) => {\r\n    return `${(new Date(date).toDateString())} ${(new Date(date).toLocaleTimeString())}`;\r\n  }\r\n\r\n  const trimTitle = (title) => {\r\n    if(title.length > 30) {\r\n      title = title.substr(0, 27) + '...';\r\n    }\r\n    return title;\r\n  }\r\n\r\n  return (\r\n    <div className=\"item-panel\">\r\n      <span className=\"item-panel-span item-name\">{trimTitle(props.item.title)}</span>\r\n      <span className=\"item-panel-span item-date\">{date(props.item.updatedAt)}</span>\r\n      <button className=\"item-btn delete\">delete</button>\r\n      <button className=\"item-btn update\">update</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SlideItem;\r\n","import React, { Component } from 'react';\r\n\r\nclass SlideForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      form: null,\r\n      error: null\r\n    };\r\n  }\r\n\r\n\r\n  \r\n  updateState = async (e, createSlide) => {\r\n    e.preventDefault();\r\n\r\n    const formData = new FormData(document.querySelector('.form-post-type-slide'));\r\n\r\n    const title = document.getElementById('title').value,\r\n          descr = document.getElementById('descr').value,\r\n          img = document.getElementById('img').files[0],\r\n          alt = document.getElementById('alt').value;\r\n\r\n    \r\n      if(title && descr && img && alt) {\r\n        await this.setState({\r\n          ...this.state,\r\n          form: formData\r\n        });\r\n\r\n        document.getElementById('title').value = '';\r\n        document.getElementById('descr').value = '';\r\n        document.getElementById('img').value = '';\r\n        document.getElementById('alt').value = '';\r\n        document.getElementById('href').value = '';\r\n    \r\n        // sending state up to Panel.js\r\n        createSlide(this.state.form);\r\n      }\r\n      // if the fields are empty\r\n      else {\r\n        this.setState({\r\n          ...this.state,\r\n          error: 'Fields must be filled!'\r\n        });\r\n      }\r\n  }\r\n\r\n\r\n  render(props) {\r\n    return (\r\n      <form className=\"edit-form form-post-type-slide\" action=\"/\" method=\"POST\" encType=\"multipart/form-data\">\r\n          \r\n        <div className=\"form-group\">\r\n          <label className=\"form-label\" htmlFor=\"title\">Write title of a slide:</label>\r\n          <input className=\"form-input\" id=\"title\" name=\"title\" type=\"text\" required></input>\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label className=\"form-label\" htmlFor=\"descr\">Write description of a slide:</label>\r\n          <input className=\"form-input\" id=\"descr\" name=\"descr\" type=\"text\" required></input>\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label className=\"form-label\" htmlFor=\"img\">Upload image of a product:</label>\r\n          <input className=\"form-input\" id=\"img\" name=\"img\" type=\"file\" required></input>\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label className=\"form-label\" htmlFor=\"alt\">Create alternative text for a slide:</label>\r\n          <input className=\"form-input\" id=\"alt\" name=\"alt\" type=\"text\" required></input>\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label className=\"form-label\" htmlFor=\"href\">Put link to the resourse for a slide:</label>\r\n          <input className=\"form-input\" id=\"href\" name=\"href\" type=\"text\"></input>\r\n        </div>\r\n\r\n        {\r\n          this.state.error ? \r\n            <div className=\"form-error\">\r\n              <span className=\"form-error-msg\">{this.state.error}</span>\r\n            </div>\r\n          :\r\n            null\r\n        }\r\n\r\n        <button onClick={(event) => { this.updateState(event, this.props.onClick) }} className=\"submit-btn\" type=\"submit\">Post</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SlideForm;\r\n","import React, { Component } from 'react';\r\n\r\nclass SlideUpdateForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      form: null,\r\n      error: null\r\n    };\r\n  }\r\n\r\n  \r\n  updateState = async (e, id, updateSlide, closeModal) => {\r\n    e.preventDefault();\r\n\r\n    const formData = new FormData(document.querySelector('.form-update-type-slide'));\r\n\r\n    const title = document.getElementById('title').value,\r\n          descr = document.getElementById('descr').value,\r\n          alt = document.getElementById('alt').value;\r\n\r\n    \r\n      if(title && descr && alt) {\r\n        await this.setState({\r\n          ...this.state,\r\n          form: formData\r\n        });\r\n\r\n        document.getElementById('title').value = '';\r\n        document.getElementById('descr').value = '';\r\n        document.getElementById('img').value = '';\r\n        document.getElementById('alt').value = '';\r\n        document.getElementById('href').value = '';\r\n    \r\n        // sending state up to Panel.js\r\n        updateSlide(this.state.form, id);\r\n        // closing modal\r\n        closeModal();\r\n      }\r\n      // if the fields are empty\r\n      else {\r\n        this.setState({\r\n          ...this.state,\r\n          error: 'Fields must be filled!'\r\n        });\r\n      }\r\n  }\r\n\r\n\r\n  render(props) {\r\n    return (\r\n      <form className=\"edit-form form-update-type-slide\" action=\"/\" method=\"PUT\" encType=\"multipart/form-data\">\r\n            \r\n        <div className=\"form-group\">\r\n          <label className=\"form-label\" htmlFor=\"title\">Update title of a slide:</label>\r\n          <input className=\"form-input\" id=\"title\" name=\"title\" type=\"text\" defaultValue={this.props.item.title} required></input>\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label className=\"form-label\" htmlFor=\"descr\">Update description of a slide:</label>\r\n          <input className=\"form-input\" id=\"descr\" name=\"descr\" type=\"text\" defaultValue={this.props.item.descr} required></input>\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label className=\"form-label\" htmlFor=\"img\">Upload image of a product:</label>\r\n          <input className=\"form-input\" id=\"img\" name=\"img\" type=\"file\" required></input>\r\n          <p>Currently used image: {this.props.item.img.originalname}</p>\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label className=\"form-label\" htmlFor=\"alt\">Update alternative text for a slide:</label>\r\n          <input className=\"form-input\" id=\"alt\" name=\"alt\" type=\"text\" defaultValue={this.props.item.alt} required></input>\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label className=\"form-label\" htmlFor=\"href\">Update link to the resourse for a slide:</label>\r\n          <input className=\"form-input\" id=\"href\" name=\"href\" defaultValue={this.props.item.href} type=\"text\"></input>\r\n        </div>\r\n\r\n        {\r\n          this.state.error ? \r\n            <div className=\"form-error\">\r\n              <span className=\"form-error-msg\">{this.state.error}</span>\r\n            </div>\r\n          :\r\n            null\r\n        }\r\n\r\n        <button onClick={(event) => { this.updateState(event, this.props.item._id, this.props.onClick, this.props.closeModal) }} className=\"submit-btn\" type=\"submit\">Update</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SlideUpdateForm;\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport Command from '../Command/Command';\r\nimport Item from '../Item/Item';\r\nimport Form from '../Form/Form';\r\nimport Modal from '../Modal/Modal';\r\nimport SlideItem from '../SlideItem/SlideItem';\r\nimport SlideForm from '../SlideForm/SlideForm';\r\nimport SlideUpdateForm from '../SlideUpdateForm/SlideUpdateForm';\r\n\r\nimport './Panel.css';\r\n\r\nexport class Panel extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n\t\t\tgoods: [],\r\n\t\t\tslides: [],\r\n\t\t\terr: null,\r\n\t\t\tsuccess: null,\r\n\t\t\tformVisibility: false,\r\n\t\t\tslideFormVisibility: false,\r\n\t\t\tmodalVisibility: false,\r\n\t\t\tmodalSlideVisibility: false,\r\n\t\t\tmodalItem: null,\r\n\t\t\tmodalSlide: null\r\n    };\r\n  }\r\n\t\r\n\t// if button delete or update was pushed\r\n  specifyClickForGoods = (e) => {\r\n\t\tconst target = e.target;\r\n\t\tconst item = target.parentNode;\r\n\t\tconst container = item.parentNode;\r\n\r\n\t\t// finding the index of item in the container ('.items')\r\n\t\tlet itemIndex = -1;\r\n\t\tfor(let i = 0; i < container.children.length; i++) {\r\n\t\t\tif(container.children[i] === item) {\r\n\t\t\t\titemIndex = i;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t// id of the item\r\n\t\tconst itemId = this.state.goods[itemIndex]._id;\r\n\r\n    if(target.classList.contains('delete')) {\r\n\t\t\t// path for the route\r\n\t\t\tconst url = `/api/goods/${itemId}`;\r\n\r\n\t\t\tthis.deletePost(url, itemId, itemIndex);\r\n\r\n    }\r\n    else if(target.classList.contains('update')) {\r\n\t\t\t// find item in the state\r\n\t\t\tconst item = this.state.goods.find((elem) => {\r\n\t\t\t\treturn elem._id.toString() === itemId.toString();\r\n\t\t\t});\r\n\r\n\t\t\tthis.setState({\r\n\t\t\t\t...this.state,\r\n\t\t\t\tmodalItem: item,\r\n\t\t\t\tmodalItemIndex: itemIndex,\r\n\t\t\t\tmodalVisibility: !this.state.modalVisibility\r\n\t\t\t});\r\n    }\r\n    else \r\n      return;\r\n\r\n\t}\r\n\r\n\r\n\t// --- METHODS FOR PRODUCTS ---\r\n\r\n\t// get all items from db\r\n\tgetGoods = () => {\r\n\t\taxios.get('/api/goods')\r\n\t\t\t.then(res => {\r\n\t\t\t\tif(res.data.length === 0) {\r\n\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t...this.state,\r\n\t\t\t\t\t\terr: 'No products were found!'\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t...this.state,\r\n\t\t\t\t\t\tgoods: res.data\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t})\r\n\t\t\t.catch(err => {\r\n\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\t...this.state,\r\n\t\t\t\t\terr: err.message\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t});\r\n\t}\r\n\t\t\r\n\r\n\r\n\t// it is passed to post-form and gets data for item\r\n\tcreatePost = (data) => {\r\n\t\taxios.post('/api/goods', data)\r\n\t\t\t.then((res) => {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\t...this.state,\r\n\t\t\t\t\tsuccess: res.data,\r\n\t\t\t\t\tformVisibility: !this.state.formVisibility\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// refreshing the goods array in the state after posting into the db\r\n\t\t\t\tthis.getGoods();\r\n\r\n\t\t\t})\r\n\t\t\t.catch(err => {\r\n\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\t...this.state,\r\n\t\t\t\t\terr: err.message\r\n\t\t\t\t});\r\n\r\n\t\t\t});\r\n\r\n\t}\r\n\t\r\n\r\n\r\n\t// updates post in the db\r\n\tupdatePost = (data, id) => {\r\n\t\tconst url = `/api/goods/${id}`;\r\n\t\taxios.put(url, data)\r\n\t\t\t.then((res) => {\r\n\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\t...this.state,\r\n\t\t\t\t\tsuccess: res.data\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// refreshing the goods array in the state after updating the db\r\n\t\t\t\tthis.getGoods();\r\n\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\t...this.state,\r\n\t\t\t\t\terr: err.message\r\n\t\t\t\t});\r\n\r\n\t\t\t});\r\n\r\n\t}\r\n\r\n\r\n\t\r\n\t// delete item from db\r\n\tdeletePost = (url, id, itemIndex) => {\r\n\t\taxios.delete(url, { data: { id } })\r\n\t\t\t.then(res => {\r\n\t\t\t\tconst newGoods = [];\r\n\t\t\t\tthis.state.goods.forEach((item, index) => {\r\n\t\t\t\t\tif(index !== itemIndex) {\r\n\t\t\t\t\t\tnewGoods.push(item);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n        this.setState({\r\n          ...this.state,\r\n\t\t\t\t\tsuccess: res.data,\r\n\t\t\t\t\tgoods: newGoods\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t})\r\n\t\t\t.catch(err => {\r\n\r\n\t\t\t\tthis.setState({\r\n          ...this.state,\r\n          err: err.message\r\n\t\t\t\t});\r\n\r\n\t\t\t});\r\n\t}\r\n\r\n\r\n\r\n\t// --- METHODS FOR SLIDES ---\r\n\r\n\tspecifyClickForSlides = (e) => {\r\n\t\tconst target = e.target;\r\n\t\tconst slide = target.parentNode;\r\n\t\tconst container = slide.parentNode;\r\n\r\n\t\t// finding the index of slide in the container ('.slides')\r\n\t\tlet slideIndex = -1;\r\n\t\tfor(let i = 0; i < container.children.length; i++) {\r\n\t\t\tif(container.children[i] === slide) {\r\n\t\t\t\tslideIndex = i;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t// id of the slide\r\n\t\tconst slideId = this.state.slides[slideIndex]._id;\r\n\r\n    if(target.classList.contains('delete')) {\r\n\t\t\t// path for the route\r\n\t\t\tconst url = `/api/slides/${slideId}`;\r\n\r\n\t\t\tthis.deleteSlide(url, slideId, slideIndex);\r\n    }\r\n    else if(target.classList.contains('update')) {\r\n\t\t\t// find slide in the state\r\n\t\t\tconst slideForUpdate = this.state.slides.find((elem) => {\r\n\t\t\t\treturn elem._id.toString() === slideId.toString();\r\n\t\t\t});\r\n\r\n\t\t\tthis.setState({\r\n\t\t\t\t...this.state,\r\n\t\t\t\tmodalSlide: slideForUpdate,\r\n\t\t\t\tmodalSlideVisibility: !this.state.modalSlideVisibility\r\n\t\t\t});\r\n\t\t}\r\n\t\t\r\n    else return;\r\n\t}\r\n\r\n\r\n\r\n\t// getting all slides from db\r\n\tgetSlides = () => {\r\n\t\taxios.get('/api/slides')\r\n\t\t\t.then(res => {\r\n\r\n\t\t\t\tif(res.data.length === 0) {\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t...this.state,\r\n\t\t\t\t\t\terr: 'No slides were found!'\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t...this.state,\r\n\t\t\t\t\t\tslides: res.data\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch(err => {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\t...this.state,\r\n\t\t\t\t\terr: err.message\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t}\r\n\r\n\r\n\t// creating new slide and push it to db\r\n\tcreateSlide = (data) => {\r\n\t\taxios.post('/api/slides', data)\r\n\t\t\t.then((res) => {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\t...this.state,\r\n\t\t\t\t\tsuccess: res.data,\r\n\t\t\t\t\tslideFormVisibility: !this.state.slideFormVisibility\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// refreshing the goods array in the state after posting into the db\r\n\t\t\t\tthis.getSlides();\r\n\r\n\t\t\t})\r\n\t\t\t.catch(err => {\r\n\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\t...this.state,\r\n\t\t\t\t\terr: err.message\r\n\t\t\t\t});\r\n\r\n\t\t\t});\r\n\t}\r\n\r\n\r\n\t// delete slide from db\r\n\tdeleteSlide = (url, id, slideIndex) => {\r\n\t\taxios.delete(url)\r\n\t\t.then(res => {\r\n\t\t\tconst newSlides = [];\r\n\r\n\t\t\t// updating state (all slides except the deleted one)\r\n\t\t\tthis.state.slides.forEach((slide, index) => {\r\n\t\t\t\tif(index !== slideIndex) {\r\n\t\t\t\t\tnewSlides.push(slide);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tthis.setState({\r\n\t\t\t\t...this.state,\r\n\t\t\t\tsuccess: res.data,\r\n\t\t\t\tslides: newSlides\r\n\t\t\t});\r\n\t\t\t\r\n\t\t})\r\n\t\t.catch(err => {\r\n\r\n\t\t\tthis.setState({\r\n\t\t\t\t...this.state,\r\n\t\t\t\terr: err.message\r\n\t\t\t});\r\n\r\n\t\t});\r\n\t}\r\n\r\n\r\n\tupdateSlide = (data, id) => {\r\n\r\n\t\tconst url = `/api/slides/${id}`;\r\n\t\taxios.put(url, data)\r\n\t\t\t.then((res) => {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\t...this.state,\r\n\t\t\t\t\tsuccess: res.data\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// refreshing the goods array in the state after updating the db\r\n\t\t\t\tthis.getSlides();\r\n\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\t...this.state,\r\n\t\t\t\t\terr: err.message\r\n\t\t\t\t});\r\n\r\n\t\t\t});\r\n\r\n\t}\r\n\r\n\r\n\r\n\t// show/close forms\r\n\ttoggleForm = () => {\r\n\t\tthis.setState({\r\n\t\t\t...this.state,\r\n\t\t\tformVisibility: !this.state.formVisibility\r\n\t\t});\r\n\t}\r\n\r\n\ttoggleSlideForm = () => {\r\n\t\tthis.setState({\r\n\t\t\t...this.state,\r\n\t\t\tslideFormVisibility: !this.state.slideFormVisibility\r\n\t\t});\r\n\t}\r\n\r\n\tcloseSlideUpdateForm = () => {\r\n\t\tthis.setState({\r\n\t\t\t...this.state,\r\n\t\t\tmodalSlideVisibility: !this.state.modalSlideVisibility\r\n\t\t});\r\n\t}\r\n\r\n\tcloseModal = () => {\r\n\t\tthis.setState({\r\n\t\t\t...this.state,\r\n\t\t\tmodalVisibility: !this.state.modalVisibility\r\n\t\t});\r\n\t}\r\n\r\n  render(props) {\r\n    return (\r\n      <div className=\"container\">\r\n\r\n        <div className=\"commands\">\r\n          <h2 className=\"commands-title\">Admin Panel:</h2>\r\n            <div className=\"msg-block error-block\">{ this.state.err ? this.state.err : null }</div>\r\n            <div className=\"msg-block success-block\">{ this.state.success ? this.state.success : null }</div>\r\n\r\n            <Command onClick={this.getGoods} action=\"Get\" descr=\"Get items\" />\r\n            <Command onClick={this.getSlides} action=\"Get\" descr=\"Get slides\" />\r\n            <Command onClick={this.toggleForm} action={ this.state.formVisibility ? 'Close item modal' : 'Open item modal' } descr=\"Create and post new item\" />\r\n            <Command onClick={this.toggleSlideForm} action={ this.state.slideFormVisibility ? 'Close slide modal' : 'Open slide modal' } descr=\"Create and post new slide\" />\r\n        </div>\r\n\r\n\t\t\t\t<p>Form for creating new products:</p>\r\n\t\t\t\t{ this.state.formVisibility ? \r\n\t\t\t\t \t<Form onClick={this.createPost} />\r\n\t\t\t\t :\r\n\t\t\t\t \tnull\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t\t<p>Form for creating new slides:</p>\r\n\t\t\t\t{ this.state.slideFormVisibility ? \r\n\t\t\t\t \t<SlideForm onClick={this.createSlide} />\r\n\t\t\t\t :\r\n\t\t\t\t \tnull\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t\t{ this.state.modalSlideVisibility ? \r\n\t\t\t\t\t<div className=\"modal-container\">\r\n\t\t\t\t\t\t<SlideUpdateForm onClick={this.updateSlide} item={this.state.modalSlide} closeModal={this.closeSlideUpdateForm} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t :\r\n\t\t\t\t \tnull\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t\t { this.state.modalVisibility ? \r\n\t\t\t\t \t\t<div className=\"modal-container\">\r\n\t\t\t\t \t\t\t<Modal updatePost={this.updatePost} item={this.state.modalItem} closeModal={this.closeModal} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t :\r\n\t\t\t\t\t\tnull\r\n\t\t\t\t }\r\n        \r\n\t\t\t\t\r\n\t\t\t\t<h3 className=\"section-title\">All products:</h3>\r\n        <div onClick={this.specifyClickForGoods} className=\"items\">\r\n          {\r\n            this.state.goods.map((item) => {\r\n              return <Item key={item._id} item={item} />\r\n            })\r\n          }\r\n        </div>\r\n\r\n\t\t\t\t<h3 className=\"section-title\">All slides:</h3>\r\n\t\t\t\t<div onClick={this.specifyClickForSlides} className=\"slides\">\r\n          {\r\n            this.state.slides.map((item) => {\r\n              return <SlideItem key={item._id} item={item} />\r\n            })\r\n          }\r\n        </div>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Panel;\r\n","import React from 'react';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\n\nimport Main from './components/Content/Main/Main';\nimport Login from './components/Login/Login';\nimport Panel from './components/Panel/Panel/Panel';\n\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/secret/adminpanel\" component={Panel} exact />\n        <Route path=\"/secret/adminlogin\" component={Login} exact />\n        <Route path=\"/\" component={Main} exact />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}